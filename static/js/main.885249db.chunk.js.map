{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","output","setOutput","addHandler","e","val","target","textContent","newArr","push","join","id","map","operator","index","className","onClick","row","num","summation","evaluate","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QA4EeA,EAnEH,WACV,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KAIMC,EAAa,SAACC,GAClB,IAAMC,EAAID,EAAEE,OAAOC,YACbC,EAAM,YAAOP,GACV,MAALI,EACFH,EAAU,KAEVM,EAAOC,KAAKJ,GACZH,EAAUM,EAAOE,KAAK,OAU1B,OACA,sBAAKC,GAAG,gBAAR,UACE,qBAAKA,GAAG,SAAR,SACE,qBAAKA,GAAG,UAAR,SACGV,MAIL,qBAAKU,GAAG,YAAR,SA5BgB,CAAC,IAAI,IAAI,IAAI,KA6BhBC,KAAI,SAACC,EAAUC,GACxB,OACE,sBACEC,UAAU,WADZ,cAEE,mBAAGA,UAAU,aAAaC,QAASb,EAAnC,SAAgDU,MAFxCC,QAQhB,sBAAKH,GAAI,YAAT,UACE,8BAvCS,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,IAAI,OAwCjCC,KAAI,SAACK,GAAD,OACN,8BACGA,EAAIL,KAAI,SAAAM,GAAG,OACV,oBACEH,UAAU,aADZ,SAGI,mBAAGA,UAAU,aAAaC,QAASb,EAAnC,SACKe,KAFFA,aAWjB,qBAAKP,GAAG,SAASK,QA3CT,SAACZ,GACX,IAAMI,EAAM,YAAOP,GACbkB,EAAYC,YAASZ,EAAOE,KAAK,KACvCR,EAAU,CAACiB,KAwCT,sBCxDSE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.885249db.chunk.js","sourcesContent":["\n//////////////////calculator ////////////////////////////////////////\nimport { useState } from \"react\";\nimport './App.css';\n// import { create, all } from 'mathjs'\n// const config = {}\n// const math=create(all, config)\nimport {evaluate} from \"mathjs\";\n\nconst App = () => {\n  const [output, setOutput] = useState([]);\n  const operators = [\"+\",\"-\",\"*\",\"/\"]\n  const data = [[7,8,9],[4,5,6],[1,2,3],[0,\".\",\"AC\"]]\n\n  const addHandler = (e) => { //onClick of add button\n    const val=e.target.textContent\n    const newArr = [...output]; //Adds every task in {todoList} to newArr.\n    if (val==\"AC\") {\n      setOutput([])\n    } else {\n      newArr.push(val); //add userInput of textbox to newArr (adds new task to list)\n      setOutput(newArr.join(\"\")); //sets todoList to newArray (updates frontEnd todoList with new list.)\n    }\n  };\n\n  const sum = (e) => {\n    const newArr = [...output]\n    const summation = evaluate(newArr.join(\"\"))\n    setOutput([summation])\n  }\n  \n  return (\n  <div id=\"calcContainer\">\n    <div id=\"output\">\n      <div id=\"output2\">\n        {output}\n      </div>\n    </div>\n\n    <div id=\"operators\">\n      {operators.map((operator, index) => {\n        return (\n          <div key={index}\n            className=\"operator\"> {/*If map function returns multiple elements,you only need to put a key on the parent.*/}\n            <p className=\"text noGap\" onClick={addHandler}>{operator}</p>\n          </div>\n        )\n      })}\n    </div>\n\n    <div id =\"container\">\n      <div> \n        {data.map((row) => (\n            <div>\n              {row.map(num => \n                <th \n                  className=\"numPadItem\" \n                  key={num}>\n                    <p className=\"text noGap\" onClick={addHandler}>\n                        {num}\n                    </p>\n                </th>\n              )}\n            </div>\n          ))\n        }\n      </div>\n\n      <div id=\"equals\" onClick={sum}>\n        =\n      </div>\n    </div>\n  </div>\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}